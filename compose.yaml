# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    container_name: flask_server_test
    environment:
      DEBUG: 1
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 5000:5000
    depends_on:
      - db
    restart: on-failure

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
  db:
    image: mysql
    # command: --default-authentication-plugin=caching_sha2_password
    restart: always
    container_name: mysql_db_test
    environment:
      MYSQL_DATABASE: db_mysql
      MYSQL_ROOT_PASSWORD: password_mysql
    ports:
      - 3306:3306
volumes:
  db-data:

